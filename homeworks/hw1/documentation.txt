1. ardf_fetch.sh

Проверява се дали е подаден правилният брой аргументи (1), както и дали този аргумент е съществуващ файл. Ако някоя проверка не мине, се изписва съответна грешка и скрипта приключва изпълнението си.  Ако параметрите за правилни, от файла се четат един по един url-ите, като за всеки от тях се изпълнява:

Взима се html съдържанието му с командата curl и след това със sed се взима само body-то. Това съдържание се "чете" ред по ред, като за всеки ред се изпълнява:

Прави се проверка дали редът съдържа “<tr class="Title2 TI21">” и ако да, значи в този ред има данни за датата. Тогава с регекс от реда се match-ва датата и се запазва в date. От тази дата се взима деня и се запазва в day, прави се проверка дали денят е във формат 01-31 и ако не е, то се добавя допълнителна нула пред деня. От дата се взима месеца и се извършва същата проверка за формата, като се променя ако не е в правилния. Накравя се запазва в date датата в правилния формат след промените (ако е имало такива). Преминава се към следващия ред от съдържанието на страницата.

Прави се проверка дали редът съдържа “<tr class="Head1.*</tr>” и ако да, значи в този ред има данни за категорията. Тогава със sed от реда се взима само категорията и се запазва в category. Преминава се към следващия ред от съдържанието на страницата.

Прави се проверка дали редът съдържа “<tr class="ResLine.*</tr>” и ако да, значи в този ред има данни за човек, участвал в състезанието. Тогава със sed i cut от реда се взимат данните за него (platz, name, clb, call, laufzeit, fox, stNr) разделени с празно място (във формат: <platz> <name> <clb> <call> <laufzeit> <fox> <stNr>) и се запазват в person. В platz се запазва мястото, като с cut се взима от person. Прави се проверка дали то завършва на точка и ако е така - тя се премахва със sed. Взимат се имената на човека от person като понеже не се знае дали за 2 или 3, реда се обръща с rev, с cut се “реже” по празно място и се взимат всички полета от 7 до края, обръща се реда отонво с rev и с cut се взимат всички полета от 2 нататък. По този начин, знаейки броя на сотаналите аргументи, се осигурява, че те ще се “изрежат” и в name ще се запазят точните имена на човека без значение дали има 2 или 3 такива. Прави се провекра за името ако е във формат “Фамилия, Име”, се превръща в “Име Фамилия” с помощта на sed. От person с помощта на rev и cut се взимат и останалите параметри за човека. Накрая се принтира един ред във формат <date>:<category>:<platz>:<name>:<clb>:<call>:<laufzeit>:<fox>:<stNr>.


2. ardf_stats.sh

Проверява се дали е подаден правилният брой аргументи (3 или 5), както и дали първият подаден аргумент е съществуващ файл. Ако някоя от тези проверки не мине, се изписва съответна грешка и скрипта приключва изпълнението си. Ако параметрите са правилни, след това ако подаденият 2-ри аргумент е командата:

- “top_places”. Toгава:
Проверява се дали е подаден правилният брой аргументи за съответната команда (5). Ако не - скриптът приключва изпълнението си. Ако да - проверява се дали подадените като 4-ти и 5-ти аргумент са числа, като ако не са - скриптът приключва изпълнението си. Ако са били подадени числа, от подаденият файл с данни file се взимат първите колоните от 2, 3 и 4, разделени с “:” с помощта на командата cut. От тях се взимат само редовете, в които категорията е същата като аргумента, подаден на скрипта. Сортират се числово по място (2-ра колона), след което с помощта на awk се избират само редовете, при които мястото е между 1 и подаденото като аргумент на скрипта число m. С cut се взимат само имената (3-та колона), сортират се и с uniq -c се взимат само уникалните, както и броят им. Сортират се числово и се взимат първите n реда, където n e подаден параметър на скрипта.

- “parts”. Тогава:
    Проверява се дали е подаден правилният брой аргументи за съответната команда (3). Ако не - скриптът приключва изпълнението си. Ако да - от подаденият файл се взимат редовете, в които има името name, подадено като параметър на скрипта, и от тях в data се запазват датата и категорията за всеки ред. От data с cut взимаме само категориите, сортираме ги и взимаме само уникалните и четем резултата ред по ред. За всяка категория:
От data се взимат редовете с тази категория, от тях се взимат с cut само датите от всеки ред и тези дати се сортират, след което се записват във формат <date1>, <date2>, … с командата sed. Принитра се ред с категорията и датите за съответната 
такава.

- Ако е подадена всякаква друга команда, се изписва грешка и скриптът приключва изпълнението си.

Източници:
https://man7.org/linux/man-pages/man1/sed.1p.html
https://man7.org/linux/man-pages/man1/sort.1.html
https://stackoverflow.com/questions/5242986/sort-logs-by-date-field-in-bash - за сортиране на дати
https://unix.stackexchange.com/questions/479561/grepping-lines-which-have-range-of-number - взимане на колони с числа в определен рейндж



